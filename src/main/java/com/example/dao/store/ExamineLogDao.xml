<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.store.ExamineLogDao">
    <!--配置实体类属性和数据库表中列的对应关系-->
    <resultMap id="BaseResultMap" type="com.example.domain.store.ExamineLog">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="comments" jdbcType="VARCHAR" property="comments"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="question_id" jdbcType="VARCHAR" property="questionId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="update_time" jdbcType="DATE" property="updateTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_dept" jdbcType="VARCHAR" property="createDept"/>

    </resultMap>

    <!--配置查询的列名公共SQL语句-->
    <sql id="Base_Column_List">
        id, comments,status,question_id,user_id,create_time,update_time,update_by,create_by,create_dept
    </sql>

    <!--配置查询所有，带条件-->
    <select id="findAll"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from st_examine_log
    </select>

    <!--配置根据ID查询-->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from st_examine_log
        where id = #{id,jdbcType=VARCHAR}
    </select>


    <!--配置根据id删除-->
    <delete id="delete" parameterType="java.lang.String">
        delete from st_examine_log  where id = #{id,jdbcType=VARCHAR}
    </delete>

    <!--配置全字段插入，当某个字段没有值时，插入null-->
    <insert id="save" parameterType="com.example.domain.store.ExamineLog">
        insert into st_examine_log ( id, comments,status,question_id,user_id,create_time,update_time,update_by,create_by,create_dept)
        values (#{id,jdbcType=VARCHAR},
                #{comments,jdbcType=VARCHAR},
                #{status,jdbcType=VARCHAR},
                #{questionId,jdbcType=VARCHAR},
                #{userId,jdbcType=VARCHAR},
                #{createTime,jdbcType=VARCHAR},
                #{updateTime,jdbcType=VARCHAR},
                #{updateBy,jdbcType=VARCHAR},
                #{createBy,jdbcType=VARCHAR},
                #{createDept,jdbcType=VARCHAR})
    </insert>

    <!--配置全字段更新，当提供的数据为null时，数据库数据会被更新为null-->
    <update id="update" parameterType="com.example.domain.store.ExamineLog">
        update st_examine_log
        set

          comments=  #{comments,jdbcType=VARCHAR},
           status =  #{status,jdbcType=VARCHAR},
          question_id =   #{questionId,jdbcType=VARCHAR},

           update_time =  #{updateTime,jdbcType=VARCHAR},

            update_by =  #{updateBy,jdbcType=VARCHAR}

        where id = #{id,jdbcType=VARCHAR}
    </update>

</mapper>
